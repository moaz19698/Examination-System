<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnExist.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5QIFDiEJOJ4DjgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFaSURBVFhH
        tZc9T8MwEED9p+JMjP0XdiYQIDohdekfZehQCZAqdQCJ2COEO+NT1LgOTnz3pJMqx/V76sdgpc3XTWvd
        i7butemcUcKAy4LrLTjBrbT1B1gY4vw0pn+Me9nBs9Ex+vwBAtx5XJCLSOVhzkp3/n6yiMMakZEP6A4b
        dOeek4f4BtNvw4YKGuvv4KzvydmDNn4ft/whEVEsJzgjFssJjojVcqImolpOrIlgkxNLItjlREmEmJyY
        ixCXE/kImOk6t5zIRFyOlJyYjZCWIyC5BVn6scNaa/unuE2GKE9/cOPIRRTIafgjsnL4znP/DraIOXnc
        kv2LVkeUyAn2iCVygi1ijZyojqiRE6sjOOTE4ghOOVEcISEn/o2Id7Urlwa3CxsYwLOS80OEs3g1O00e
        sMqJTMQJA44XiwJy4krEUbXGbeDFO8wH3FYf4l4x0AGuT3S2xm1+AbWcsZ9fql0tAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="ID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>